{"version":3,"sources":["firebase.js","components/Login.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["firebaseapp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","state","loggedIn","submitForm","e","preventDefault","email","document","getElementById","value","toString","password","alert","auth","signInWithEmailAndPassword","then","setState","console","log","localStorage","setItem","catch","error","message","this","to","className","style","titleStyle","subtitleStyle","onSubmit","id","placeholder","type","required","Component","textAlign","fontFamily","Home","database","cancelSalesModal","setAttribute","activateSalesModal","cancelStockModal","activateStockModal","cancelExchangeModal","activateExchangeModal","getTotalExchanged","total","transactions_arr","copyTransactions","i","length","amount","getGrossTotalCopies","copiesTakenLot1","defective","startLogout","removeItem","submitSalesModalForm","parseInt","cash","paytm","uid","currentUser","ref","update","soldTillDateCash","soldTillDatePaytm","getItem","email_id","pw","on","snapshot","sales_data","val","innerHTML","emailid","paddingLeft","paddingRight","margin","marginBottom","boxStyle","fontSize","fontWeight","name","marginTop","color","marginRight","buddygroup","cardHeaderStyle","salesDataStyle","notebookStatusStyle","copiedTakenLot2","notebookExchangedStyle","onClick","aria-label","marginLeft","paddingTop","backgroundColour","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7904c5dd.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDs1P-39sb-u1IrUkIcX1roqSJIK99Cxlk\",\n    authDomain: \"desiresalesportal-9397a.firebaseapp.com\",\n    databaseURL: \"https://desiresalesportal-9397a.firebaseio.com\",\n    projectId: \"desiresalesportal-9397a\",\n    storageBucket: \"\",\n    messagingSenderId: \"713354689146\",\n    appId: \"1:713354689146:web:b76ca164010d5526\"\n};\n\nlet firebaseapp = firebase.initializeApp(firebaseConfig)\n\n\nexport default firebaseapp","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport firebaseapp from '../firebase'\n\nexport class Login extends Component {\n\n    state = {\n        loggedIn: false\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n\n        let email = document.getElementById('emailInput').value.toString();\n        let password = document.getElementById('passwordInput').value.toString();\n\n        if (email === '' || password === ''){\n            alert('Please enter email and password');\n        }\n        else {\n            let auth = firebaseapp.auth()\n            auth.signInWithEmailAndPassword(email, password)\n                .then(() => {\n                    // Login Successful\n                    // store login status and redirect to home\n                    this.setState({\n                        loggedIn: true\n                    })\n                    console.log(\"Login state changed to true\")\n\n                    localStorage.setItem(\"loginStatus\", true)\n                    localStorage.setItem(\"email_id\", email);\n                    localStorage.setItem(\"password\", password);\n                })\n                .catch((error) => {\n                    // tell the user about the error\n                    alert(error.message)\n                });\n        }\n    }\n\n    render() {\n        if(this.state.loggedIn){\n            return <Redirect to=\"/home\" />\n        }\n\n        return (\n            <div>\n                <br></br>\n                <br></br>\n                <h1 className='title is-1' style={titleStyle}>SALES PORTAL</h1>\n                <h3 className='subtitle is-4' style={subtitleStyle}>Desire Foundation</h3>\n                \n                <br></br>\n                \n                <form className='column is-half is-offset-one-quarter' onSubmit={ this.submitForm }>\n                    <div className='field'>\n                        <label className='label'>Email</label>\n                        <div className='control'>\n                            <input id='emailInput' placeholder='john@example.com' className='input' type='email' required />\n                        </div>\n                    </div>\n\n                    <div className='field'>\n                        <label className='label'>Password</label>\n                        <div className='control'>\n                            <input id='passwordInput' className='input' type='password' required/>\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <input type='submit' value='Login' className='button is-link' />\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst titleStyle = {\n    textAlign: 'center',\n    fontFamily: 'Rubik, sans-serif'\n}\n\nconst subtitleStyle = {\n    textAlign: 'center',\n    fontFamily: 'Rubik, sans-serif'\n}\n\nexport default Login\n","import React, { Component } from 'react'\n\nimport firebaseapp from '../firebase'\n\nexport class Home extends Component {\n    auth = firebaseapp.auth();\n    database = firebaseapp.database();\n\n    state = {\n        \"loggedIn\": false,\n        \"password\": \"\",\n        \"buddygroup\": \"\",\n        \"copiesTakenLot2\": 0,\n        \"copiesTakenLot1\": 0,\n        \"copyTransactions\": [],\n        \"defective\": 0,\n        \"email\": \"\",\n        \"name\": \"\",\n        \"rollno\": 0,\n        \"soldTillDateCash\": 0,\n        \"soldTillDatePaytm\": 0\n    }\n\n    constructor(){\n        super()\n        let loginStatus = localStorage.getItem(\"loginStatus\");\n        \n        if(loginStatus){\n            let email_id = localStorage.getItem(\"email_id\");\n            let pw = localStorage.getItem(\"password\");\n\n            this.auth.signInWithEmailAndPassword(email_id, pw)\n                .then(() => {\n                    let uid = this.auth.currentUser.uid;\n\n                    this.database.ref(`/salesdata/${uid}`).on('value', (snapshot) => {\n                        let sales_data = snapshot.val();\n                        this.setState(sales_data);\n\n                        let e = document.getElementById(\"stockExchangedCopies\");\n                        let total = this.getTotalExchanged()\n                        e.innerHTML += `<b>${total.toString()}</b>`\n                        \n                        let ee = document.getElementById(\"exchangeExchangedCopies\")\n                        ee.innerHTML += `<b>${total.toString()}</b>  `\n                    });\n                })\n                .catch((error) => {\n                    alert(error.message);\n                });\n\n            this.setState({\n                loggedIn: true,\n                emailid : email_id,\n                password: pw\n            });\n            \n        }\n        else {\n            this.setState({\n                loggedIn: false\n            })\n        }\n\n    }\n\n    cancelSalesModal = () => {\n        let m = document.getElementById(\"salesDataModal\");\n        m.setAttribute(\"class\",\"modal\")\n    }\n    \n    activateSalesModal = () => {\n        let m = document.getElementById(\"salesDataModal\");\n        m.setAttribute(\"class\",\"modal is-active\");\n    }\n\n    cancelStockModal = () => {\n        let m = document.getElementById(\"stockDataModal\");\n        m.setAttribute(\"class\", \"modal\");\n    }\n\n    activateStockModal = () => {\n        let m = document.getElementById(\"stockDataModal\");\n        m.setAttribute(\"class\", \"modal is-active\");\n    }\n\n    cancelExchangeModal = () => {\n        let m = document.getElementById(\"exchangeDataModal\");\n        m.setAttribute(\"class\", \"modal\")\n    }\n\n    activateExchangeModal = () => {\n        let m = document.getElementById(\"exchangeDataModal\");\n        m.setAttribute(\"class\", \"modal is-active\");\n    }\n\n\n    // Data Aggregator Functions\n    getTotalExchanged = () => {\n        let total = 0;\n\n        let transactions_arr = this.state.copyTransactions;\n\n        for(let i=0; i<transactions_arr.length; i++){\n            total += transactions_arr[i].amount;\n        }\n\n        return total;\n    }\n\n    getGrossTotalCopies = () => {\n        let total;\n\n        total = this.copiesTakenLot1 + this.copiesTakenLot1 + this.getTotalExchanged() - this.state.defective\n\n        return total;\n    }\n\n    startLogout = () => {\n        this.setState({\n            loggedIn: false,\n            email: \"\",\n            password: \"\"\n        })\n        console.log(\"logout\")\n        localStorage.setItem(\"loginStatus\", false);\n        localStorage.removeItem(\"emaid_id\");\n        localStorage.removeItem(\"password\");\n    }\n\n    // Modal Submission\n\n    submitSalesModalForm = (e) => {\n        e.preventDefault();\n\n        let total = parseInt(document.getElementById('modalSoldInput').value);\n        let cash = parseInt(document.getElementById('modalCashInput').value);\n        let paytm = parseInt(document.getElementById('modalPaytmInput').value);\n\n        if(total === cash + paytm){\n            let uid = this.auth.currentUser.uid;\n\n            this.database.ref(`/salesdata/${uid}/`).update({\n                \"soldTillDateCash\": this.state.soldTillDateCash + cash,\n                \"soldTillDatePaytm\": this.state.soldTillDatePaytm + paytm\n            }).then(() => {\n                alert(\"Update Successful\");\n            })\n        }\n        else {\n            alert(\"Cash + PayTm is not equal to the Total\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 style={titleStyle}>Sales Portal</h1>\n                <h3 style={subtitleStyle}>Desire Foundation</h3>\n                <br></br>\n                <div className='columns'  style={{ paddingLeft: '1rem', paddingRight: '1rem', margin: '0rem', marginBottom: '2rem'}}>\n                    <div className='column is-narrow'>\n                        <div className='box' style={boxStyle}>\n                            <p style= {{fontSize: '1.75rem', fontWeight: '300'}}>Hii, <b>{this.state.name}</b></p>\n                            <p style= {{fontSize: '1.2rem', fontWeight: '300', marginTop: '0.5rem'}}>\n                                <i className=\"fas fa-envelope-open-text\" style={{color: '#0d47a1', marginRight: '0.2rem'}}></i> {this.state.email}\n                            </p>\n                            <p style= {{fontSize: '1.2rem', fontWeight: '300'}}>\n                                <i className=\"fas fa-users\" style={{color: '#0d47a1', marginRight: '0.2rem'}}></i> Buddy Group : {this.state.buddygroup}\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className='column is-narrow'>\n                        <div className='box' style={boxStyle}>\n                            <h1 className='title' style={{color: '#d50000'}}>\n                                <i className=\"fas fa-money-check-alt\"></i> Total Sold\n                            </h1>\n\n                            <h1 className='title' style={{fontWeight: '300'}}>\n                                ₹ {((this.state.soldTillDateCash + this.state.soldTillDatePaytm) * 35).toString()} /-\n                            </h1>\n                            \n                        </div>\n                    </div>\n                </div>\n\n                <div className='columns' style={{ paddingLeft: '1rem', paddingRight: '1rem', margin: '0rem' }}>\n\n                    <div className='column'>\n                        <div className='box'>\n                            <h1 style={cardHeaderStyle}>\n                                <i className=\"fas fa-chart-area\" style={{ marginRight: '1rem' }}></i> Sales Data \n                            </h1>\n\n                            <br></br>\n\n                            <p style={salesDataStyle}>Total Sales Amount : ₹ {(this.state.soldTillDateCash + this.state.soldTillDatePaytm) * 35}</p>\n\n                            <br></br>\n                            \n                            <p style={salesDataStyle}>\n                                <i className=\"fas fa-money-bill-alt\" style={{ marginRight: '0.3rem' }}></i> Cash : ₹ {this.state.soldTillDateCash * 35} ({this.state.soldTillDateCash})\n                            </p>\n                            <p style={salesDataStyle}>\n                                <i className=\"fas fa-credit-card\" style={{ marginRight: '0.35rem' }}></i> Paytm : ₹ {this.state.soldTillDatePaytm * 35} ({this.state.soldTillDatePaytm})\n                            </p>\n                            \n                            <br></br>\n\n                        </div>\n                    </div>\n\n                    <div className='column'>\n                        <div className='box'>\n                            <h1 style={cardHeaderStyle}>\n                                <i className=\"fas fa-box\" style={{marginRight: '1rem'}}></i> Stock\n                            </h1>\n\n                            <br></br>\n\n                            <p style={notebookStatusStyle}>Copies taken in Lot 1 : <b>{this.state.copiesTakenLot1}</b>  </p>\n                            <p style={notebookStatusStyle}>Copies taken in Lot 2 : <b>{this.state.copiedTakenLot2}</b>  </p>\n                            <br></br>\n                            <p id=\"stockExchangedCopies\" style={notebookStatusStyle}>Exchanged : </p>\n                            <p style={notebookStatusStyle}>Defective : <b>{this.state.defective}</b>  </p>\n                            <br></br>\n                            <p style={notebookStatusStyle}>Gross Total:  <b>80</b>  </p>\n                            <p style={notebookStatusStyle}>Total Copies Sold :  <b>{(this.state.soldTillDatePaytm + this.state.soldTillDateCash).toString()}</b>  </p>\n                            <p style={notebookStatusStyle}>Total Copies in Hand : <b>52</b>  </p>\n                        </div>\n                    </div>\n\n                    <div className='column'>\n                        <div className='box'>\n                            <h1 style={cardHeaderStyle}>\n                                <i className=\"fas fa-book-open\" style={{ marginRight: '1rem'}}></i> Exchanged\n                            </h1>\n                            <br></br>\n                            <br></br>\n                            <p id=\"exchangeExchangedCopies\" style={notebookExchangedStyle}>Total Exchanged : </p>\n                        </div>\n                    </div>\n                </div>\n                <br></br>\n\n                <div style={{ paddingLeft: '2rem', paddingRight: '2rem', margin: '0rem' }} className=\"columns\">\n                    <button className=\"button is-large is-danger\" onClick={ this.activateSalesModal } style={{marginRight:'1rem', marginBottom: '1rem'}}>\n                        Add Sales Data\n                    </button>\n                    \n                    <button className=\"button is-large is-info\" onClick={ this.activateStockModal } style={{marginRight:'1rem', marginBottom: '1rem'}}>\n                        Edit Stock Data\n                    </button>\n                    \n                    <button className=\"button is-large is-warning\" onClick={ this.activateExchangeModal } style={{marginRight:'1rem', marginBottom: '1rem'}}>\n                        Add Exchange\n                    </button>\n                </div>\n\n                <br></br>\n                \n\n                <div id=\"salesDataModal\" className=\"modal\">\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-card\">\n                        <header className=\"modal-card-head\">\n                            <p className=\"modal-card-title\">Add Sales Data</p>\n                            <button className=\"delete\" onClick={this.cancelSalesModal} aria-label=\"close\"></button>\n                        </header>\n                        <section className=\"modal-card-body\">\n                            <form onSubmit={this.submitSalesModalForm}>\n                                <div className='field'>\n                                    <label className='label'>Add Copies Sold</label>\n                                    <input className='input' id='modalSoldInput' type='number' required placeholder='This will be added to the Total'></input>\n                                    \n                                    <label className='label' style={{marginTop: '1rem'}}>\n                                        <i className=\"fas fa-money-bill-alt\" style={{ marginRight: '0.3rem' }}></i> In Cash\n                                    </label>\n                                    <input className='input' id='modalCashInput' type='number' required placeholder='This will be added to the Total'></input>\n                                    \n                                    <label className='label' style={{marginTop: '1rem'}}>\n                                        <i className=\"fas fa-credit-card\" style={{ marginRight: '0.3rem' }}></i> In Paytm\n                                    </label>\n                                    <input className='input' id='modalPaytmInput' type='number' required placeholder='This will be added to the Total'></input>\n\n                                </div>\n                                <br></br>\n                                <input type='submit' className=\"button is-info\" value=\"Update\"></input>\n                            </form>\n                        </section>\n                        <footer className=\"modal-card-foot\"></footer>\n                    </div>\n                </div>\n\n\n\n                <div id=\"stockDataModal\" className=\"modal\">\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-card\">\n                        <header className=\"modal-card-head\">\n                            <p className=\"modal-card-title\">Edit Stock Data</p>\n                            <button className=\"delete\" onClick={this.cancelStockModal} aria-label=\"close\"></button>\n                        </header>\n                        <section className=\"modal-card-body\">\n                            <form>\n                                <div className='field'>\n                                    <label className='label'>Copies Taken in Lot 2</label>\n                                    <input className='input' type='number' required placeholder='This will be added to the Total'></input>\n                                    \n                                    <label className='label' style={{marginTop: '1rem'}}>\n                                        <i className=\"fas fa-window-close\" style={{ marginRight: '0.3rem' }}></i> Defective\n                                    </label>\n                                    <input className='input' type='number' required placeholder='This will be added to the Total'></input>\n\n                                </div>\n                                <br></br>\n                                <input type='submit' className=\"button is-info\" value=\"Update\"></input>\n                            </form>\n                        </section>\n                        <footer className=\"modal-card-foot\"></footer>\n                    </div>\n                </div>\n\n\n\n\n                <div id=\"exchangeDataModal\" className=\"modal\">\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-card\">\n                        <header className=\"modal-card-head\">\n                            <p className=\"modal-card-title\">Add Exchange Data</p>\n                            <button className=\"delete\" onClick={this.cancelExchangeModal} aria-label=\"close\"></button>\n                        </header>\n                        <section className=\"modal-card-body\">\n                            <form>\n                                <div className='field'>\n                                    <label className='label'>Exchanged With</label>\n                                    <input className='input' type='text' required placeholder='Name of the person'></input>\n                                    \n                                    <label className='label' style={{marginTop: '1rem'}}>Number of Copies, + if taken, -ve if given</label>\n                                    <input className='input' type='number' required placeholder='This will be added to the Total'></input>\n\n                                </div>\n                                <br></br>\n                                <input type='submit' className=\"button is-info\" value=\"Update\"></input>\n                            </form>\n                        </section>\n                        <footer className=\"modal-card-foot\"></footer>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst titleStyle = {\n    fontSize: '3.5rem',\n    fontFamily: 'Rubik, sans-serif',\n    marginLeft: '2rem',\n    paddingTop: '2rem',\n    fontWeight: '500'\n}\n\nconst subtitleStyle = {\n    fontSize: '1.5rem',\n    fontFamily: 'Heebo, sans-serif',\n    marginLeft: '2rem',\n    fontWeight: '300'\n}\n\nconst boxStyle = {\n    fontFamily: 'Heebo, sans-serif',\n    backgroundColour: '#e0f2f1'\n}\n\nconst cardHeaderStyle = {\n    fontFamily: 'Rubik, sans-serif',\n    fontSize: '2rem',\n    fontWeight: '400'\n}\n\nconst salesDataStyle = {\n    fontFamily: 'Heebo, sans-serif',\n    fontSize: '1.5rem',\n    fontWeight: '300'\n}\n\nconst notebookStatusStyle = {\n    fontFamily: 'Heebo, sans-serif',\n    fontSize: '1.3rem',\n    fontWeight: '300'\n}\n\nconst notebookExchangedStyle = {\n    fontFamily: 'Heebo, sans-serif',\n    fontSize: '1.6rem',\n    fontWeight: '300'\n}\n\nexport default Home\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport './App.css';\n\nimport Login from './components/Login'\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component = { Login }/>\n            <Route exact path='/login' component = { Login }/>\n            <Route exact path='/home' component = { Home } />\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}